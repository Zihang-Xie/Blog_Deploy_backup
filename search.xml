<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>清华大学复试上机题</title>
    <url>/2021/04/06/article-002/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-abc"><a href="#1-abc" class="headerlink" title="1 abc"></a>1 abc</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;设a、b、c均是0到9之间的数字，abc、bcc是两个三位数，且有：abc+bcc=532。求满足条件的所有a、b、c的值。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;题目没有任何输入。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;请输出所有满足题目条件的a、b、c的值。a、b、c之间用空格隔开。每个输出占一行。</p>
<span id="more"></span>

<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9WMRTE">http://t.cn/E9WMRTE</a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt;= <span class="number">9</span>; a++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt;= <span class="number">9</span>; b++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> c = <span class="number">0</span>; c &lt;= <span class="number">9</span>; c++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (a * <span class="number">100</span> + b * <span class="number">110</span> + c * <span class="number">12</span> == <span class="number">532</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, a, b, c);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="2-反序数"><a href="#2-反序数" class="headerlink" title="2 反序数"></a>2 反序数</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;设N是一个四位数，它的9倍恰好是其反序数（例如：1234的反序数是4321），求N的值。</p>
<h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;题目没有任何输入。</p>
<h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;输出题目要求的4位数，如果结果有多组，则每组结果之间以回车隔开。</p>
<h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="提交网址-1"><a href="#提交网址-1" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9WBrut">http://t.cn/E9WBrut</a></p>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> revx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        revx *= <span class="number">10</span>;</span><br><span class="line">        revx += x % <span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> revx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1000</span>; i &lt;= <span class="number">9999</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i * <span class="number">9</span> == <span class="built_in">Reverse</span>(i))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="3-今年的第几天？"><a href="#3-今年的第几天？" class="headerlink" title="3 今年的第几天？"></a>3 今年的第几天？</h1><h2 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;输入年、月、日，计算该天是本年的第几天。</p>
<h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;包括3个整数：年(1&lt;=Y&lt;=3000)、月(1&lt;=M&lt;=12)、日(1&lt;=D&lt;=31)。</p>
<h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;输入可能有多组测试数据，对于每一组测试数据，输出一个整数，代表Input中的年、月、日对应本年的第几天。</p>
<h2 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1990 9 20</span><br><span class="line">2000 5 1</span><br></pre></td></tr></table></figure>

<h2 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">263</span><br><span class="line">122</span><br></pre></td></tr></table></figure>

<h2 id="提交网址-2"><a href="#提交网址-2" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9jXK5A">http://t.cn/E9jXK5A</a></p>
<h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> day_table[<span class="number">2</span>][<span class="number">13</span>]=</span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsLeapYear</span><span class="params">(<span class="keyword">int</span> year)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || (year % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year, month, day;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;year, &amp;month, &amp;day) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> row = <span class="built_in">IsLeapYear</span>(year);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; month; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            count += day_table[row][j];</span><br><span class="line">        &#125;</span><br><span class="line">        count += day;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, count);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="4-进制转换"><a href="#4-进制转换" class="headerlink" title="4 进制转换"></a>4 进制转换</h1><h2 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;将一个长度最多为30位数字的十进制非负整数转换为二进制数输出。</p>
<h2 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;多组数据，每行为一个长度不超过30位的十进制非负整数。（注意是10进制数字的个数可能有30个，而非30bits的整数）</p>
<h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;每行输出对应的二进制数。</p>
<h2 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">8</span><br></pre></td></tr></table></figure>

<h2 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">11</span><br><span class="line">1000</span><br></pre></td></tr></table></figure>

<h2 id="提交网址-3"><a href="#提交网址-3" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/AiCuoPRO">http://t.cn/AiCuoPRO</a></p>
<h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">Divide</span><span class="params">(string str, <span class="keyword">int</span> x)</span>                        <span class="comment">//字符串除法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> remainder = <span class="number">0</span>;                                  <span class="comment">//保存余数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> current = remainder * <span class="number">10</span> + str[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        str[i] = current / x + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        remainder = current % x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> position = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[position] == <span class="string">&#x27;0&#x27;</span>)                        <span class="comment">//寻找首个非0下标</span></span><br><span class="line">    &#123;</span><br><span class="line">        position++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str.<span class="built_in">substr</span>(position);                        <span class="comment">//删除前置多余的0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; str) </span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; binary;</span><br><span class="line">        <span class="keyword">while</span> (str.<span class="built_in">size</span>() != <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> last = str[str.<span class="built_in">size</span>() - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>;       <span class="comment">//最低位的值</span></span><br><span class="line">            binary.<span class="built_in">push_back</span>(last % <span class="number">2</span>);                 <span class="comment">//取模运算</span></span><br><span class="line">            str = <span class="built_in">Divide</span>(str, <span class="number">2</span>);                       <span class="comment">//整除运算</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = binary.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, binary[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="5-对称平方数1"><a href="#5-对称平方数1" class="headerlink" title="5 对称平方数1"></a>5 对称平方数1</h1><h2 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;打印所有不超过256，其平方具有对称性质的数。如2，11就是这样的数，因为2<em>2=4，11</em>11=121。</p>
<h2 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;无任何输入数据</p>
<h2 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;输出具有题目要求的性质的数。如果输出数据不止一组，各组数据之间以回车隔开。</p>
<h2 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="提交网址-4"><a href="#提交网址-4" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9lUYRn">http://t.cn/E9lUYRn</a></p>
<h2 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> rev_x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        rev_x *= <span class="number">10</span>;</span><br><span class="line">        rev_x += x % <span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rev_x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i * i == <span class="built_in">Reverse</span>(i * i))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="6-n的阶乘"><a href="#6-n的阶乘" class="headerlink" title="6 n的阶乘"></a>6 n的阶乘</h1><h2 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;输入一个整数n，输出n的阶乘（每组测试用例可能包含多组数据，请注意处理）</p>
<h2 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;一个整数n(1&lt;=n&lt;=20)</p>
<h2 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n的阶乘</span><br></pre></td></tr></table></figure>

<h2 id="样例输入-5"><a href="#样例输入-5" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>

<h2 id="样例输出-5"><a href="#样例输出-5" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>

<h2 id="提交网址-5"><a href="#提交网址-5" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/Ai0oc0UY">http://t.cn/Ai0oc0UY</a></p>
<h2 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Factorial</span><span class="params">(<span class="keyword">int</span> n)</span>                  <span class="comment">//递归函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>)                             <span class="comment">//递归出口</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span>                                    <span class="comment">//递归调用</span></span><br><span class="line">        <span class="keyword">return</span> n * <span class="built_in">Factorial</span>(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">Factorial</span>(n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
        <category>考研</category>
        <category>复试</category>
        <category>编程</category>
      </categories>
      <tags>
        <tag>复试</tag>
        <tag>机试题库</tag>
      </tags>
  </entry>
  <entry>
    <title>My First Post</title>
    <url>/2021/04/06/article-001/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      <categories>
        <category>undefined</category>
      </categories>
      <tags>
        <tag>undefined</tag>
      </tags>
  </entry>
  <entry>
    <title>北京理工大学复试上机题</title>
    <url>/2021/04/06/article-003/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-日期累加"><a href="#1-日期累加" class="headerlink" title="1 日期累加"></a>1 日期累加</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;设计一个程序，它能够计算一个日期加上若干天后是什么日期。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;输入第一行表示样例个数m，接下来m行中，每行4个整数，分别表示年、月、日和累加的天数。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;输出m行，每行按yyyy-mm-dd的个数输出。</p>
<span id="more"></span>


<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2008 2 3 100</span><br></pre></td></tr></table></figure>

<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2008-05-13</span><br></pre></td></tr></table></figure>

<h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9Yw0Cr">http://t.cn/E9Yw0Cr</a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> day_table[<span class="number">2</span>][<span class="number">13</span>]=&#123;</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsLeapYear</span><span class="params">(<span class="keyword">int</span> year)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || (year % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DaysOfYear</span><span class="params">(<span class="keyword">int</span> year)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">IsLeapYear</span>(year))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">366</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">365</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year, month, day;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">int</span> caseNumber;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;caseNumber);</span><br><span class="line">    <span class="keyword">while</span>(caseNumber--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;year, &amp;month, &amp;day, &amp;count);</span><br><span class="line">        <span class="keyword">int</span> row = <span class="built_in">IsLeapYear</span>(year);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; month; j++)</span><br><span class="line">            count += day_table[row][j];</span><br><span class="line">        count += day;</span><br><span class="line">        <span class="keyword">while</span>(count &gt; <span class="built_in">DaysOfYear</span>(year))</span><br><span class="line">        &#123;</span><br><span class="line">            count -= <span class="built_in">DaysOfYear</span>(year);</span><br><span class="line">            year++;</span><br><span class="line">        &#125;</span><br><span class="line">        month=<span class="number">0</span>;</span><br><span class="line">        row = <span class="built_in">IsLeapYear</span>(year);</span><br><span class="line">        <span class="keyword">while</span>(count &gt; day_table[row][month])</span><br><span class="line">        &#123;</span><br><span class="line">            count -= day_table[row][month];</span><br><span class="line">            month++;</span><br><span class="line">        &#125;</span><br><span class="line">        day = count;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, year, month, day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
        <category>考研</category>
        <category>复试</category>
        <category>编程</category>
      </categories>
      <tags>
        <tag>复试</tag>
        <tag>机试题库</tag>
      </tags>
  </entry>
  <entry>
    <title>哈尔滨工业大学复试上机题</title>
    <url>/2021/04/07/article-004/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-最大公约数"><a href="#1-最大公约数" class="headerlink" title="1 最大公约数"></a>1 最大公约数</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;输入两个正整数，求其最大公约数。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;测试数据有多组，每组输入两个正整数。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;对于每组输入,请输出其最大公约数。</p>
<span id="more"></span>

<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">49 14</span><br></pre></td></tr></table></figure>

<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>

<h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/AiCuWLTS">http://t.cn/AiCuWLTS</a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">GCD</span>(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">GCD</span>(a, b));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="2-素数判定"><a href="#2-素数判定" class="headerlink" title="2 素数判定"></a>2 素数判定</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;给定一个数n，要求判断其是否为素数（0,1和负数都是非素数）。</p>
<h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;测试数据有多组，每组输入一个数n。</p>
<h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;对于每组输入,若是素数则输出yes，否则输入no。</p>
<h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure>

<h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yes</span><br></pre></td></tr></table></figure>

<h2 id="提交网址-1"><a href="#提交网址-1" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/AiCuWE0Q">http://t.cn/AiCuWE0Q</a></p>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Judge</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;                             <span class="comment">//判断是否为质数</span></span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">2</span>) &#123;                                <span class="comment">//小于2必定不是</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> bound = <span class="built_in">sqrt</span>(x) + <span class="number">1</span>;                    <span class="comment">//确定判断上界</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= bound; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Judge</span>(n)) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;yes\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;no\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
        <category>考研</category>
        <category>复试</category>
        <category>编程</category>
      </categories>
      <tags>
        <tag>复试</tag>
        <tag>机试题库</tag>
      </tags>
  </entry>
  <entry>
    <title>浙江大学复试上机题</title>
    <url>/2021/04/07/article-005/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-xxx定律"><a href="#1-xxx定律" class="headerlink" title="1 xxx定律"></a>1 xxx定律</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;对于一个数 n，如果是偶数，就把 n 砍掉一半；如果是奇数，把 n 变成 3n + 1 后砍掉一半，直到该数变为 1 为止。请计算需要经过几步才能将 n 变到 1 ，具体可见样例。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;测试包含多个用例，每个用例包含一个整数 n，当 n 为 0 时表示输入结束。（1 &lt;= n &lt;= 10000）</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;对于每组测试用例请输出一个数，表示需要经过的步数，每组输出占一行。</p>
<span id="more"></span>

<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E937wDs">http://t.cn/E937wDs</a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> step = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (n != <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                n = n / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            step++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, step);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习</category>
        <category>考研</category>
        <category>复试</category>
        <category>编程</category>
      </categories>
      <tags>
        <tag>复试</tag>
        <tag>机试题库</tag>
      </tags>
  </entry>
  <entry>
    <title>华中科技大学复试上机题</title>
    <url>/2021/04/13/article-006/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-打印日期"><a href="#1-打印日期" class="headerlink" title="1 打印日期"></a>1 打印日期</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;给出年份 m 和一年中的第 n 天，算出第 n 天是几月几号。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;输入包括两个整数：y (1 &lt;= y &lt;= 300) 和 n (1 &lt;= n &lt;= 366)。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;可能有多组测试数据，对于每组数据，按 yyyy-mm-dd 的格式将输入中对应的日期打印出来。</p>
<span id="more"></span>

<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2000 3</span><br><span class="line">2000 31</span><br><span class="line">2000 40</span><br><span class="line">2000 60</span><br><span class="line">2000 61</span><br><span class="line">2001 60</span><br></pre></td></tr></table></figure>

<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2000-01-03</span><br><span class="line">2000-01-31</span><br><span class="line">2000-02-09</span><br><span class="line">2000-02-29</span><br><span class="line">2000-03-01</span><br><span class="line">2001-03-01</span><br></pre></td></tr></table></figure>

<h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9YP2a8">http://t.cn/E9YP2a8</a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dayTable[<span class="number">2</span>][<span class="number">13</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsLeapYear</span><span class="params">(<span class="keyword">int</span> year)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || (year % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year, month, day;</span><br><span class="line">    <span class="keyword">int</span> number;                                 		<span class="comment">//记录天数</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;year, &amp;number) != EOF) &#123;</span><br><span class="line">        month = <span class="number">0</span>;                              		<span class="comment">//初始化月</span></span><br><span class="line">        <span class="keyword">int</span> row = <span class="built_in">IsLeapYear</span>(year);</span><br><span class="line">        <span class="keyword">while</span> (number &gt; dayTable[row][month]) &#123; 		<span class="comment">//确定月</span></span><br><span class="line">            number -= dayTable[row][month];</span><br><span class="line">            month++;</span><br><span class="line">        &#125;</span><br><span class="line">        day = number;                           		<span class="comment">//确定日</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, year, month, day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
        <category>考研</category>
        <category>复试</category>
        <category>编程</category>
      </categories>
      <tags>
        <tag>复试</tag>
        <tag>机试题库</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/04/06/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>undefined</category>
      </categories>
      <tags>
        <tag>undefined</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语言使用指南（网转）</title>
    <url>/2021/04/06/article-000/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Markdown 是一种轻量级的标记语言，其用简单的标记语法便可达到排版的目的，其可以使我们更加专注于内容的编写，而不需过多关注排版。本文主要整理了 Markdown 中的常用的标记语法，以便自己与他人以后查用。</p>
<h2 id="段落元素"><a href="#段落元素" class="headerlink" title="段落元素"></a>段落元素</h2><h3 id="1、段落与换行"><a href="#1、段落与换行" class="headerlink" title="1、段落与换行"></a>1、段落与换行</h3><p>Markdown 中的段落指连续的一段文字，编写时段落之间用至少一个<strong>空行</strong>隔开，段落内多个空格将被视为一个空格，段首不支持缩进。</p>
<p>如果想要在显示时显示多个空行，可以插入 <code>&lt;br/&gt;</code> 来实现，注意的是，插入的 <code>&lt;br/&gt;</code> 应与前后的段落中间至少空一行。</p>
<h3 id="2、标题"><a href="#2、标题" class="headerlink" title="2、标题"></a>2、标题</h3><p>Markdown 支持两种类型的标题。</p>
<pre><code>//类型 1
这是一级标题
==========
这是二级标题
----------

//类型 2
# 这是一级标题
## 这是二级标题
...
###### 这是六级标题
</code></pre>
<p>从上面可以看出类型 1 是在标题下面插入 <code>=</code> 或者 <code>-</code> 来标识标题等级，但局限是其只能表示两个级别的标题。</p>
<p>类型 2 是在标题前面插入 1 - 6 个 # ，表示 6 个等级的标题，这是比较推荐的用法。</p>
<h3 id="3、引用"><a href="#3、引用" class="headerlink" title="3、引用"></a>3、引用</h3><p>Markdown 中使用 <code>&gt;</code> 来引用。我们可以在一段文字中的每行开头加上 <code>&gt;</code> 来表示一段引用文字，也可以只在一段文字的开头插入一个 <code>&gt;</code> 来表示，如下面的 1、2 两种方式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;方式 1</span><br><span class="line">&gt; 这是一句话</span><br><span class="line">&gt; 这是第二句话</span><br></pre></td></tr></table></figure>


<p>【显示效果】</p>
<blockquote>
<p>这是一句话<br>这是第二句话</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;方式 2</span><br><span class="line">&gt; 这是一句话</span><br><span class="line">这是第二句话</span><br></pre></td></tr></table></figure>


<p>【显示效果】</p>
<blockquote>
<p>这是一句话<br>这是第二句话</p>
</blockquote>
<p>Markdown 支持使用不同数量的 <code>&gt;</code> 表示嵌套引用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 这是外层的引用</span><br><span class="line">&gt; &gt; 这是内层的引用</span><br></pre></td></tr></table></figure>


<p>【显示效果】</p>
<blockquote>
<p>这是外层的引用</p>
<blockquote>
<p>这是内层的引用</p>
</blockquote>
</blockquote>
<h3 id="4、无序列表"><a href="#4、无序列表" class="headerlink" title="4、无序列表"></a>4、无序列表</h3><p>无序列表使用 <code>-</code>、 <code>+</code> 或 <code>*</code> 来作为标记。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- 第一项</span><br><span class="line">- 第二项</span><br><span class="line">- 第三项</span><br></pre></td></tr></table></figure>


<p>【显示效果】</p>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<p>上面的 <code>-</code> 可以用 <code>+</code>、 <code>*</code>替换。需要注意的是，<code>-</code> 等符号与后面的文字至少空一格空格。</p>
<h3 id="5、有序列表"><a href="#5、有序列表" class="headerlink" title="5、有序列表"></a>5、有序列表</h3><p>有序列表使用数字和紧挨着的点号表示。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br></pre></td></tr></table></figure>

<p>同无序列表一样，标记符号与后面的文字至少空一格空格。但编辑时的数字对显示无影响。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2. 第一项</span><br><span class="line">6. 第二项</span><br><span class="line">1. 第三项</span><br></pre></td></tr></table></figure>

<p>上面的例子与前一个显示的结果完全一致，但建议编辑时按照数字顺序。</p>
<h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><ul>
<li><p>有序列表和无序列表的每一项中均可嵌套其他列表；</p>
</li>
<li><p>在列表项之间要插入段落时，这时需要将列表项之间的段落缩进 4 个空格；</p>
</li>
<li><p>使用 <code>1\. </code> 来输出 <code>1. </code>;</p>
</li>
</ul>
<h3 id="6、代码区块"><a href="#6、代码区块" class="headerlink" title="6、代码区块"></a>6、代码区块</h3><p>缩进 4 个空格，需要注意的是，每行代码都需要至少缩进 4 个空格，不能像段落一样采用首行标记的偷懒写法，一个代码区会一直持续到没有缩进 4 个空格的那一行。</p>
<p>也可以用一对三个连续的撇号 <code>`</code> 来包裹代码段。</p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">code</span><br></pre></td></tr></table></figure>
</code></pre>
<p>有的解释器还能根据代码的语言从而给代码加上语法高亮。</p>
<pre><code><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;&#125;</span><br></pre></td></tr></table></figure>
</code></pre>
<h3 id="7、分割线"><a href="#7、分割线" class="headerlink" title="7、分割线"></a>7、分割线</h3><p>使用三个及以上的 <code>*</code>、 <code>-</code> 或 <code>_</code>来表示一个分割线，符号不能混用，符号之间可以插入多个空格。需要注意的是，使用 <code>-</code> 来插入分割线时需要与上一个段落至少空一行，否则 Markdown 会将上一行文字解释为二级标题。</p>
<h3 id="8、表格"><a href="#8、表格" class="headerlink" title="8、表格"></a>8、表格</h3><p>表格是 Markdown 比较复杂的一种表示。</p>
<pre><code>| Table | Col1 | Col2 |
| ----- |:----:| ----:|
| Row1  | 1-1  | 1-2  |
| Row2  | 2-1  | 2-2  |
| Row3  | 3-1  | 3-2  |
</code></pre>
<p>上面第二行中的点代表对齐方式，分别是默认（居左）、居中、居右。</p>
<p>【显示效果】</p>
<table>
<thead>
<tr>
<th>Table</th>
<th align="center">Col1</th>
<th align="right">Col2</th>
</tr>
</thead>
<tbody><tr>
<td>Row1</td>
<td align="center">1-1</td>
<td align="right">1-2</td>
</tr>
<tr>
<td>Row2</td>
<td align="center">2-1</td>
<td align="right">2-2</td>
</tr>
<tr>
<td>Row3</td>
<td align="center">3-1</td>
<td align="right">3-2</td>
</tr>
</tbody></table>
<hr>
<h2 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h2><h3 id="9、超链接"><a href="#9、超链接" class="headerlink" title="9、超链接"></a>9、超链接</h3><p>Markdown 中有三种方式实现超链接。</p>
<pre><code>//方式 1
[百度](http://www.baidu.com)
</code></pre>
<p>【显示效果】</p>
<p><a href="http://www.baidu.com/">百度</a></p>
<pre><code>//方式 2
[百度][Baidu-url]
[Baidu-url]: http://www.baidu.com
</code></pre>
<p>方式 1 较为常用，也可以为链接的文字加上提示文字，只要在括号中超链接加上空格后添加提示内容即可。</p>
<pre><code>[百度](http://www.baidu.com &quot;这是提示文字&quot;)
</code></pre>
<p>【显示效果】</p>
<p><a href="http://www.baidu.com/" title="这是提示文字">百度</a></p>
<p>方式 2 由链接文字和链接地址组成，不同的是两者均由 <code>[]</code> 包裹。链接地址的格式为：</p>
<ul>
<li>方括号，里面输入链接地址；</li>
<li>紧接着是一个冒号；</li>
<li>冒号后面至少一个空格；</li>
<li>链接地址；</li>
<li>若有提示文字，空格后用引号或者括号包裹提示文字。</li>
</ul>
<p>下面是完整示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[百度][Baidu-url]</span><br><span class="line">[Baidu-url]: http:&#x2F;&#x2F;www.baidu.com &quot;这是提示文字&quot;</span><br></pre></td></tr></table></figure>

<p>第三种方式是用 <code>&lt;&gt;</code> 来包裹 URL。</p>
<pre><code>//方式 3
&lt;http://www.baidu.com&gt;
</code></pre>
<p>【显示效果】</p>
<p><a href="http://www.baidu.com/">http://www.baidu.com</a></p>
<h3 id="10、加粗和斜体"><a href="#10、加粗和斜体" class="headerlink" title="10、加粗和斜体"></a>10、加粗和斜体</h3><p>Markdown 使用 <code>*</code> 和 <code>_</code> 来表示粗体和斜体。</p>
<pre><code>//加粗
**这是加粗文字**
__这也是加粗文字__
</code></pre>
<p>【显示效果】</p>
<p><strong>这是加粗文字</strong><br><strong>这也是加粗文字</strong></p>
<pre><code>//斜体
*这是斜体文字*
_这也是斜体文字_
</code></pre>
<p>【显示效果】</p>
<p><em>这是斜体文字</em><br><em>这也是斜体文字</em></p>
<p>被偶数个 <code>*</code> 或 <code>_</code> 包裹的文字显示加粗效果，被奇数个包裹的为倾斜效果。</p>
<p>需要注意的是，<code>*</code> 和 <code>-</code> 要成对出现，不能混合使用，也不能只出现一个。同时，标识符号要与标识的文字紧挨着，符号与符号之间、符号文字之间不能有任何空格。</p>
<h3 id="11、代码"><a href="#11、代码" class="headerlink" title="11、代码"></a>11、代码</h3><p>使用 <code>`</code> (撇号) 来包裹一小段代码。</p>
<pre><code>`Hello world.`
</code></pre>
<p>若想在代码中添加撇号，可以使用多个撇号包裹里面需要添加的撇号，但注意里面的连续的撇号数量不能超过外面的数量。</p>
<pre><code>//显示一个撇号
`` ` ``
//显示两个撇号
``` ``  ```
</code></pre>
<h3 id="12、图片"><a href="#12、图片" class="headerlink" title="12、图片"></a>12、图片</h3><p>图片的插入方式跟超链接前两种插入方式类似。</p>
<pre><code>//方式 1
![如果图片不能显示，就显示这段文字](图片 url)

//方式 2
![如果图片不能显示，就显示这段文字][Image-url]
[Image-url]: 图片url &quot;这是提示文字&quot;
</code></pre>
<h2 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠 \"></a>反斜杠 <code>\</code></h2><p>我们经常需要在文章中插入一些特殊符号，而这些符号恰好是前面所讲的标识符号，可以在特殊符号前插入 <code>\</code> 来直接显示符号，而不让 Markdown 来将其解释为标识符号。</p>
<p>Markdown 支持以下这些符号前插入 <code>\</code> 而显示其本来样子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">&#96;   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure>


<p>【显示效果】</p>
<p>\    反斜线<br>`    反引号<br>*    星号<br>_    底线<br>{}   花括号<br>[]   方括号<br>()   括弧<br>#    井字号<br>+    加号<br>-    减号<br>.    英文句点<br>!    惊叹号</p>
<h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>其实，市场上有很多的 Markdown 解释器，它们大都能支持上面所讲的语法，但呈现出的样式往往不一。另外，不同的解释器还能支持其他自己定义的语法，比如 Github 还能支持 emoji。下面再着重介绍 Github 支持的几个 Markdown 语法。不过需要注意的是，有些语法只能在 issue 或者 pull request 上使用，这个在后面讲每个语法时会标记（约定：“通用”表示在 Github 任何地方可以使用的语法，“特殊”表示只能在 issue 或者 pull request 上使用）。</p>
<h3 id="语法高亮-通用"><a href="#语法高亮-通用" class="headerlink" title="语法高亮(通用)"></a>语法高亮(通用)</h3><p>上面说过，有的解释器是能够显示语法高亮的，Github 就可以。</p>
<h3 id="任务列表（通用）"><a href="#任务列表（通用）" class="headerlink" title="任务列表（通用）"></a>任务列表（通用）</h3><pre><code>- [ ] task one
- [x] task two
</code></pre>
<p>【显示效果】</p>
<ul>
<li><input disabled="" type="checkbox"> task one</li>
<li><input checked="" disabled="" type="checkbox"> task two</li>
</ul>
<p>用法跟普通列表的用法差不多，只不过在每一项文字前面加了 <code>[ ]</code> 或者 <code>[x]</code>。<code>[ ]</code> 中间有且只有一个空格，表示未完成，另一个表示已完成。</p>
<h3 id="表格（通用）"><a href="#表格（通用）" class="headerlink" title="表格（通用）"></a>表格（通用）</h3><p>Github 支持更简单的 table 语法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">First Header | Second Header</span><br><span class="line">------------ | -------------</span><br><span class="line">Content from cell 1 | Content from cell 2</span><br><span class="line">Content in the first column | Content in the second column</span><br></pre></td></tr></table></figure>


<p>【显示效果】</p>
<table>
<thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead>
<tbody><tr>
<td>Content from cell 1</td>
<td>Content from cell 2</td>
</tr>
<tr>
<td>Content in the first column</td>
<td>Content in the second column</td>
</tr>
</tbody></table>
<p>表头与项用一排 <code>-</code> 分隔开，每一列用 <code>|</code> 分隔开。</p>
<h3 id="SHA-引用（特殊）"><a href="#SHA-引用（特殊）" class="headerlink" title="SHA 引用（特殊）"></a>SHA 引用（特殊）</h3><p>每一次 commit 都会产生一个 id，用 <code>@id</code> 的方式可以链接到某个项目的特定的 commit。比如用 <code>jquery/jquery@1b9575b9d14399e9426b9eacdd92b3717846c3f2</code> 就能链接到 jquery 的一次 commit 记录上。</p>
<h3 id="issue-引用（特殊）"><a href="#issue-引用（特殊）" class="headerlink" title="issue 引用（特殊）"></a>issue 引用（特殊）</h3><p>用 <code>#1</code> 来引用当前 repo 的第一个 issue，也可以用 <code>jquery/jquery#1</code> 引用 jquery 的第一次 issue。</p>
<h3 id="（特殊）"><a href="#（特殊）" class="headerlink" title="@（特殊）"></a>@（特殊）</h3><p>用 <code>@</code> 来提醒目标用户。比如 <code>@CompileYouth</code> 可以 @ 到我。</p>
<h3 id="删除符号（通用）"><a href="#删除符号（通用）" class="headerlink" title="删除符号（通用）"></a>删除符号（通用）</h3><p>用连续两个 <code>~</code> 包围的词会被加上删除符。比如 <code>~~This is removed~~</code>。</p>
<p>【显示效果】</p>
<p><del>This is removed</del></p>
<h3 id="Emoji（通用）"><a href="#Emoji（通用）" class="headerlink" title="Emoji（通用）"></a>Emoji（通用）</h3><p>Github 比较有意思的是可以支持 emoji。比如 <code>:smile:</code> 表示笑脸等等，具体可以查看 <a href="http://www.webpagefx.com/tools/emoji-cheat-sheet/">Emoji Cheat Sheet</a></p>
<p>详细信息可以查看<a href="https://guides.github.com/features/mastering-markdown/">官方文档</a>。最后 po 两张 Github 官方推荐的 Markdown Cheat Sheet：<a href="./github-markdown-cheatsheet0.jpg">通用语法</a>，<a href="./github-markdown-cheatsheet1.jpg">Github 支持语法</a></p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul>
<li>Windows 环境下，推荐 <a href="https://www.typora.io/">Typora</a>、<a href="http://markdownpad.com/">Markdownpad</a>（自带图床功能）</li>
<li>Mac 环境下，推荐 Typora、<a href="http://25.io/mou/">Mou</a></li>
<li>笔记软件： 为知笔记较好的支持 markdown，且支持 Windows、Mac、web、ios、android 等各个平台</li>
<li>当然，还有 Github</li>
</ul>
<h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>Markdown 文件的编辑在不同编辑器中有不一样的表现，我主要介绍一下在 Atom 中使用 Markdown 的情况。</p>
<p>Atom 官方自带了一个插件，叫 <a href="https://atom.io/packages/markdown-preview">markdown-preview</a>，可以在 Atom 中进行预览。当然，Atom 还有很多第三方的 Markdown 插件，我使用的是 <a href="https://atom.io/packages/markdown-writer">markdown-writer</a>，可以使我更方便地编辑 Markdown 文件，当然你可以根据自己的需要下载插件。</p>
<p>在 Atom 中，其他的使用方式就不赘述了，唯一需要提一下的是插入 table。在 Markdown 中插入 table 是一件比较麻烦的事情，而在 Atom 中，可以简化操作，就是直接输入 <code>table</code> 然后按 Enter 键，编辑器便会自动生成 table 的模板，比自己手写便捷多了。</p>
<p>拓展阅读：</p>
<ol>
<li><a href="http://wowubuntu.com/markdown/">Markdown 语法说明</a></li>
</ol>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
